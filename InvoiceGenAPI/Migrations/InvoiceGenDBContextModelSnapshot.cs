// <auto-generated />
using System;
using InvoiceGenAPI.DataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceGenAPI.Migrations
{
    [DbContext(typeof(InvoiceGenDBContext))]
    partial class InvoiceGenDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyPhone")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceCompanyCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceUserUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("InvoiceCompanyCompanyId");

                    b.HasIndex("InvoiceUserUserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.InvoiceContent", b =>
                {
                    b.Property<int>("IContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IContentId"), 1L, 1);

                    b.Property<string>("IContentArticleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IContentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IContentDiscount")
                        .HasColumnType("int");

                    b.Property<int?>("IContentInvoiceNumberInvoiceId")
                        .HasColumnType("int");

                    b.Property<float>("IContentPrice")
                        .HasColumnType("real");

                    b.Property<int>("IContentQuantity")
                        .HasColumnType("int");

                    b.Property<int>("IContentTotalArticle")
                        .HasColumnType("int");

                    b.Property<float>("IContentTotalPrice")
                        .HasColumnType("real");

                    b.Property<float>("IContentUnitPrice")
                        .HasColumnType("real");

                    b.HasKey("IContentId");

                    b.HasIndex("IContentInvoiceNumberInvoiceId");

                    b.ToTable("InvoicesContent");
                });

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLast")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserNickName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserPhone")
                        .HasColumnType("int");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.Company", b =>
                {
                    b.HasOne("InvoiceGenAPI.Models.DataModel.User", null)
                        .WithMany("Companies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.Invoice", b =>
                {
                    b.HasOne("InvoiceGenAPI.Models.DataModel.Company", "InvoiceCompany")
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceCompanyCompanyId");

                    b.HasOne("InvoiceGenAPI.Models.DataModel.User", "InvoiceUser")
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceUserUserId");

                    b.Navigation("InvoiceCompany");

                    b.Navigation("InvoiceUser");
                });

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.InvoiceContent", b =>
                {
                    b.HasOne("InvoiceGenAPI.Models.DataModel.Invoice", "IContentInvoiceNumber")
                        .WithMany()
                        .HasForeignKey("IContentInvoiceNumberInvoiceId");

                    b.Navigation("IContentInvoiceNumber");
                });

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.Company", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("InvoiceGenAPI.Models.DataModel.User", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
